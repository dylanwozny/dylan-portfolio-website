@use "../utilities/vars" as *;
/*------------------------------------*\
  #Button Colors
\*------------------------------------*/
// logic determines if border is shown when the hover fills in the background white
@mixin buttonBg($bg, $border, $txt, $fill-border: false) {
  background-color: $bg;
  color: $txt;
  border-color: $border;

  @if $fill-border {
    &:hover {
      border-color: $border;
      background: $txt;
      transition: all 0.3s ease;
      color: $bg;
    }
  } @else {
    &:hover {
      background: $txt;
      border-color: $txt;
      transition: all 0.3s ease;
      color: $bg;
    }
  }

  &:active {
    background: lighten($bg, 25%);
  }
}

/*------------------------------------*\
  #Background image using img element
\*------------------------------------*/
// OLD, can still use but better to use .sr-only and image-set()
@mixin backgroundImg($zindex: 0, $pt: 5rem, $pb: 5rem, $pl: 0, $pr: 0) {
  z-index: $zindex;
  position: $bckimg-parentPos;
  padding: $pt $pr $pb $pl;
  img {
    z-index: $bckimg-z2;
    position: $bckimg-childPos;
    object-fit: $bckimg-imgFit;
    height: $bckimg-h;
    width: $bckimg-w;
    top: $bckimg-top;
    left: $bckimg-left;
  }
}

/*------------------------------------*\
  #Background image Accessability for screen readers
\*------------------------------------*/

// skill card

// flex

/*------------------------------------*\
  #Fluid Grid for sections
\*------------------------------------*/
/* fluid grid with break points. This gird has wrapping and the children snap to column width,... */

@mixin sectionGrid($gap, $minwidth, $colwidth1, $colwidth2) {
  display: grid;
  grid-gap: 1.5rem $gap;
  grid-template-columns: repeat(auto-fit, minmax(min($minwidth, 100%), 1fr));
  .grid-item1 {
    grid-column: span $colwidth1;
  }
  .grid-item2 {
    grid-column: span $colwidth2;
  }
}
